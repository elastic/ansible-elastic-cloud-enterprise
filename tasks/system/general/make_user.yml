---
- name: Determine Available groups
  getent:
    database: group

- name: Is there an elastic User
  getent:
    key: "elastic"
    database: passwd
    fail_key: false

- name: Add group elastic
  group:
    name:  "{{ item }}"
    state: present
  when: item not in ansible_facts.getent_group
  with_items:
      - docker
      - elastic  

- name: Add user elastic
  user:
    name: elastic
    uid: 1001
    group: elastic
    groups: docker
    append: yes
    state: present
    generate_ssh_key: true
  when: getent_passwd["elastic"] == none

- name: Modify user elastic to be included in groups
  user:
    name: elastic
    groups: docker
    append: yes
  when: getent_passwd["elastic"] != none

- name: Check for user elastic's authorized_keys file
  stat:
    path: ~elastic/.ssh/authorized_keys
  register: es_authorized_keys 

- name: Copy keys from default user to elastic user
  copy:
    src: "~{{ ansible_ssh_user }}/.ssh/authorized_keys"
    dest: ~elastic/.ssh/
    remote_src: yes
  when: es_authorized_keys.stat.exists == false
  
- name: Set pwd policy
  lineinfile:
    path: /etc/sudoers.d/99-ece-users
    line: 'elastic ALL=(ALL) NOPASSWD:ALL'
    state: present
    create: true
